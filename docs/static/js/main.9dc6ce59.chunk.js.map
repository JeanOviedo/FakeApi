{"version":3,"sources":["redux/Types.tsx","redux/Actions.tsx","views/ModalView.tsx","views/CreateUserView.tsx","rutas/token.ts","img/ok2.webp","img/ok.webp","views/LoginView.tsx","Table.tsx","views/UsersView.tsx","rutas/Private.js","views/Error404View.tsx","App.tsx","registerServiceWorker.js","redux/Reducer.tsx","redux/Store.tsx","img/logo.png","Header.tsx","index.tsx"],"names":["USUARIO","MODAL","ERROR","LOADING","SESION","ActionLoading","valor","console","log","type","payload","actionUsuarios","dispatch","a","axios","url","method","response","data","to","ModalView","modaldata","useSelector","state","todos","modal","useDispatch","handleClick","evento","preventDefault","mensaje","image","visible","replace","className","src","alt","onClick","event","CreateUserView","props","useState","name","setName","job","setJob","errorName","setErrorName","errorTrabajo","setErrorTrabajo","loading","useEffect","onSubmit","e","valor2","post","placeholder","onChange","target","value","disabled","get","sessionStorage","getItem","LoginView","window","location","pathname","password","setPasword","errorEmail","setErrorEmail","errorPass","setErrorPass","setRedirect","email","setEmail","setLoading","Sesion","sesion","handleLogin","token","setItem","setTimeout","id","Ima","Ima2","autoComplete","style","color","TableComponent","columns","useTable","initialState","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","textAlign","render","row","getRowProps","cells","cell","getCellProps","width","values","UsersView","load","users","setUsers","page","setPage","totalPages","setTotalPages","cerraSesion","DATA","usuario","useMemo","Header","accessor","undefined","total_pages","float","margin","PrivateRoute","children","Error404View","App","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootReducer","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","RedirectText","clicked","setclicked","stopPropagation","Logo","removeItem","persistor","persistStore","ReactDOM","StrictMode","basename","process","document","getElementById","URL","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9dc6ce59.chunk.js","sourcesContent":["export const USUARIO = \"USUARIO\";\r\nexport const MODAL = \"MODAL\";\r\nexport const MODALINFO = \"MODALINFO\";\r\nexport const ERROR = \"ERROR\";\r\nexport const LOADING = \"LOADING\";\r\nexport const SESION = \"SESION\";\r\n\r\n","import axios from \"axios\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nimport { USUARIO, MODAL, MODALINFO, ERROR, LOADING ,SESION } from \"./Types\";\r\n\r\nexport function ActionModalInfo(valor: any) {\r\n  console.log(\"MODALINFO    ss-----------\", valor);\r\n  return { type: MODAL, payload: valor };\r\n}\r\n\r\nexport function actionModal(valor: any) {\r\n  console.log(\"MODAL-----------\", valor);\r\n  return { type: MODAL, payload: valor };\r\n}\r\n\r\nexport function ActionLoading(valor: any) {\r\n  console.log(\"LOADING-----------\", valor);\r\n  return { type: LOADING, payload: valor };\r\n}\r\n\r\nexport function ActionCerrarSesion(valor: any) {\r\n  console.log(\"SESION-----------\", valor);\r\n  return { type: SESION, payload: valor };\r\n}\r\n\r\nexport function CloseModal(valor: any) {\r\n  return { type: MODAL, modal: valor };\r\n}\r\n\r\nexport function actionUsuarios(valor: any) {\r\n  return async function (\r\n    dispatch: (arg0: { type: any; payload: any }) => void\r\n  ) {\r\n    try {\r\n      let response = await axios({\r\n        url: `https://reqres.in/api/users?page=${valor}`,\r\n        method: \"get\",\r\n      });\r\n\r\n      dispatch({ type: USUARIO, payload: response.data });\r\n      dispatch( { type: SESION, payload: true });\r\n     \r\n      console.log(\"NUEVA DATA\", response.data.data);\r\n      dispatch({ type: LOADING, payload: false });\r\n    } catch (error) {\r\n      // const history = useHistory();\r\n      console.log(\"ERROR\", error);\r\n      dispatch({ type: ERROR, payload: \"Ocurrio un error\" });\r\n      dispatch({ type: LOADING, payload: false });\r\n      return <Navigate to=\"/ingreso\" />;\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionDestroySesion(valor: any) {\r\n  sessionStorage.removeItem(\"token\");\r\n  setTimeout(() => {\r\n    return <Navigate to=\"/ingreso\" />\r\n  }, 2000);\r\n ;\r\n}\r\n\r\nexport function actionNewUsuarios(valor: any, valor2: any) {\r\n  return async function (\r\n    dispatch: (arg0: {\r\n      type: any;\r\n      payload:\r\n        | any\r\n        | {\r\n            mensaje: any;\r\n            image: any;\r\n            visible: any;\r\n            data: any;\r\n          };\r\n    }) => void\r\n  ) {\r\n    try {\r\n      let response = await axios.post(`https://reqres.in/api/users`, {\r\n        name: valor,\r\n        job: valor2,\r\n      });\r\n      console.log(\"Creado usuario con exito\");\r\n      dispatch({ type: LOADING, payload: false });\r\n      //     dispatch({type: MODAL, payload: {\r\n      //         mensaje: \"Creado usuario con exito...\",\r\n      //      image:\r\n      //        \"https://www.isblasalle.edu.co/wp-content/uploads/2020/01/mision.png\",\r\n      //      visible: true,\r\n      //      data: \"Creado usuario con exito\",\r\n      //    }});\r\n    } catch (error) {\r\n      console.log(\"ERROR\", error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionLoginUsuarios(valor: any, valor2: any) {\r\n  return async function (\r\n    dispatch: (arg0: {\r\n      type: any;\r\n      payload:\r\n        | any\r\n        | {\r\n            mensaje: any;\r\n            image: any;\r\n            visible: any;\r\n            data: any;\r\n          };\r\n    }) => void\r\n  ) {\r\n    try {\r\n      let response = await axios.post(\"https://reqres.in/api/login\", {\r\n        email: valor,\r\n        password: valor2,\r\n      });\r\n\r\n      if (response.data.token) {\r\n        dispatch({ type: \"LOGIN\", payload: false });\r\n        sessionStorage.setItem(\"token\", response.data.token);\r\n        dispatch( { type: SESION, payload: true });\r\n        return <Navigate to=\"/usuarios\" replace={true} />\r\n       \r\n       \r\n      \r\n        // history.push(\"/ingreso\");\r\n        // history.push(\"/usuarios\");\r\n        //     dispatch({type: MODAL, payload: {\r\n        //         mensaje: \"Login exitoso...\",\r\n        //      image:\r\n        //        \"https://www.isblasalle.edu.co/wp-content/uploads/2020/01/mision.png\",\r\n        //      visible: true,\r\n        //      data: \"Login exitoso...\",\r\n        //    }});\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ERROR\", error);\r\n      dispatch({\r\n        type: MODAL,\r\n        payload: {\r\n          mensaje: \"Login Error, validar datos\",\r\n          image:\r\n            \"https://www.pngall.com/wp-content/uploads/2/Sad-Boy-PNG-Pic.png\",\r\n          visible: true,\r\n          data: \"Login con errores intente de nuevo\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n}\r\n","import React, {Fragment} from \"react\";\r\n\r\nimport {actionModal} from \"../redux/Actions\";\r\nimport {useSelector, useDispatch, RootStateOrAny} from \"react-redux\";\r\nimport {Navigate} from 'react-router';\r\nimport \"../css/Modal.css\"\r\nexport default function ModalView() {\r\n\r\n\r\n    let modaldata = useSelector((state : RootStateOrAny) => state.todos.modal);;\r\n\r\n    const dispatch = useDispatch();\r\n \r\n\r\n    function handleClick(evento : any) {\r\n        evento.preventDefault();\r\n        dispatch(actionModal({mensaje: \"\", image: \"\", visible: false, data: \"data\"}));\r\n        console.log(\"cerrado\", \"clik\");\r\n        return <Navigate to=\"/ingreso\" replace={true} />\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment> {\r\n            modaldata !== \"\" ? (\r\n\r\n\r\n                <div \r\n                    className=\"modal\">\r\n                    <div>\r\n\r\n                        <h1>{\r\n                            modaldata.mensaje\r\n                        }</h1>\r\n\r\n\r\n                        <img src={\r\n                                modaldata.image\r\n                            }\r\n                            alt={\r\n                                modaldata.image\r\n                            }\r\n                            className=\"card-image\"/>\r\n\r\n\r\n                    </div>\r\n                    <button onClick={\r\n                            (event) => handleClick(event)\r\n                        }\r\n                        className=\"button-4\">Cerrar</button>\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n\r\n            ) : \"\"\r\n        } </Fragment>\r\n    );\r\n\r\n}\r\n","// Los valores que deberá tener la propiedad “data-testid” en los elementos HTML son:\r\n// h1 de título=\"create__title\"\r\n// Input de nombre=“create__name”\r\n// Input de trabajo=“create__job”\r\n// Span que alerta con notificaciones=“alert__text”\r\n// Botón para crear= “create__btn”\r\nimport React, {useEffect, useState} from \"react\";\r\nimport \"../css/Forms.css\";\r\nimport {useSelector, useDispatch, RootStateOrAny} from \"react-redux\";\r\nimport {ActionLoading, actionNewUsuarios} from \"../redux/Actions\";\r\nimport ModalView from \"./ModalView\";\r\nexport default function CreateUserView(props : any) {\r\n    const [name, setName] = useState(\"\");\r\n    const [job, setJob] = useState(\"\");\r\n\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorTrabajo, setErrorTrabajo] = useState(false);\r\n    const [succes, setSucces] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state : RootStateOrAny) => state.todos.loading);\r\n    const modal = useSelector((state : RootStateOrAny) => state.todos.modal);\r\n    useEffect(() => {\r\n        dispatch(ActionLoading(false));\r\n    }, []);\r\n\r\n    const handleLogin = (e : any) => {\r\n        e.preventDefault();\r\n        console.log(name, job, \"NAME JOB\");\r\n\r\n        if (name === \"\") {\r\n            setErrorName(true);\r\n        } else if (job === \"\") {\r\n            setErrorTrabajo(true);\r\n         } else if (job !== \"\" && name !== \"\") {\r\n            console.log(errorName, errorTrabajo, \"errorTrabajo\");\r\n            dispatch(ActionLoading(true));\r\n            dispatch(actionNewUsuarios(name, job));\r\n            setErrorName(false);\r\n            setErrorTrabajo(false);\r\n        }\r\n    };\r\n\r\n    return (<div> {\" \"}\r\n        {\r\n        modal.visible ? <ModalView></ModalView> : \"\"\r\n    }\r\n        <h1 data-testid=\"create__title\">/crear/</h1>\r\n        <br/>\r\n        <form onSubmit={handleLogin}>\r\n            <input type=\"text\" placeholder=\"Nombre\" className=\"form__input\"\r\n            name=\"create__name\"\r\n                onChange={\r\n                    (event) => setName(event.target.value)\r\n                }\r\n                data-testid=\"create__name\"/> {\r\n            errorName == true ? (<span data-testid=\"alert__text\">Nombre requerido</span>) : (``)\r\n        }\r\n            <br></br>\r\n            <input type=\"text\" placeholder=\"Trabajo\" className=\"form__input\"\r\n                onChange={\r\n                    (event) => setJob(event.target.value)\r\n                }\r\n                data-testid=\"create__job\"/>{\" \"}\r\n            {\r\n            errorTrabajo == true ? (<span data-testid=\"alert__text\">Trabajo requerido</span>) : (``)\r\n        }\r\n            <br></br>\r\n            <button type=\"submit\" className=\"button-5\"\r\n                disabled={loading}\r\n                data-testid=\"create__btn\"> {\" \"}\r\n                {\r\n                loading ? \"Cargando...\" : \"Crear\"\r\n            }\r\n                {\" \"} </button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nconst useFormInput = (initialValue : string) => {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const handleChange = (e : any) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return {value, onChange: handleChange};\r\n};\r\n","export const get = () => {\n    return sessionStorage.getItem('token') || null;\n}\n\nexport const remove = () => {\n    sessionStorage.removeItem('token');\n}\n\nexport const set = (token: string) => {\n    sessionStorage.setItem('token', token);\n}\n\n","export default __webpack_public_path__ + \"static/media/ok2.8982d318.webp\";","export default __webpack_public_path__ + \"static/media/ok.7061a288.webp\";","import React, { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch, RootStateOrAny } from \"react-redux\";\r\nimport { ActionLoading, actionLoginUsuarios } from \"../redux/Actions\";\r\nimport { get } from \"../rutas/token\";\r\nimport ModalView from \"./ModalView\";\r\nimport Ima from \"../img/ok2.webp\";\r\nimport Ima2 from \"../img/ok.webp\";\r\nimport \"../css/Home.css\";\r\n\r\nfunction LoginView(props: any) {\r\n  const token = get();\r\n  let url = window.location.pathname;\r\n  const [password, setPasword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [errorEmail, setErrorEmail] = useState(\"\");\r\n  const [errorPass, setErrorPass] = useState(\"\");\r\n  const [Redirect, setRedirect] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const Sesion = useSelector((state: RootStateOrAny) => state.todos.sesion);\r\n  const modal = useSelector(\r\n    (state: RootStateOrAny) => state.todos.modal.visible\r\n  );\r\n\r\n  const handleLogin = (evento: any) => {\r\n    evento.preventDefault();\r\n    setErrorEmail(\"\");\r\n    setErrorPass(\"\");\r\n\r\n    if (email === \"\" && password === \"\") {\r\n      setErrorEmail(\"Email es requerido\");\r\n      setErrorPass(\"Contraseña es requerida\");\r\n    } else if (password === \"\") {\r\n      setErrorPass(\"Contraseña es requerida\");\r\n    } else if (email !== \"\" && password !== \"\") {\r\n      setLoading(true);\r\n      dispatch(actionLoginUsuarios(email, password));\r\n      dispatch(ActionLoading(true));\r\n\r\n      setTimeout(() => {\r\n        setRedirect(true);\r\n        <Navigate to=\"/crear\" replace={true}></Navigate>;\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {Sesion && url === \"/ingreso\" ? (\r\n        <Navigate to=\"/usuarios\" replace={true}></Navigate>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modal === true ? <ModalView></ModalView> : \"\"}\r\n      <div className=\"container\" id=\"container\">\r\n        <div className=\"center\" id=\"container\">\r\n          <img src={Ima} className=\"Ima\"></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\" id=\"container\">\r\n        <div id=\"izquierda\" className=\"izquierda\">\r\n          <img src={Ima2} className={\"Ima2\"} />\r\n        </div>\r\n        <div id=\"right\" className=\"derecha\">\r\n          <h2>Comienza</h2>\r\n          <p>La app permite iniciar sesión y buscar usuarios.</p>\r\n\r\n          <h1 data-testid=\"login__title\">Login</h1>\r\n          <br />\r\n          <form>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form__input\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"Correo\"\r\n                data-testid=\"login__email\"\r\n              />\r\n            </div>\r\n            <span\r\n              id=\"email-error\"\r\n              className=\"form-text error\"\r\n              style={{ color: \"red\" }}\r\n              data-testid=\"alert__text\"\r\n            >\r\n              {errorEmail && <> {errorEmail}</>}{\" \"}\r\n            </span>\r\n            <br></br>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                className=\"form__input\"\r\n                aria-describedby=\"password-error\"\r\n                onChange={(event) => setPasword(event.target.value)}\r\n                autoComplete=\"new-password\"\r\n                data-testid=\"login__password\"\r\n              />\r\n            </div>\r\n            <span\r\n              id=\"password-error\"\r\n              className=\"form-text error\"\r\n              style={{ color: \"red\" }}\r\n              data-testid=\"alert__text\"\r\n            >\r\n              {errorPass && <> {errorPass}</>}{\" \"}\r\n            </span>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button-5\"\r\n              disabled={loading}\r\n              data-testid=\"login__btn-login\"\r\n              onClick={(evento) => handleLogin(evento)}\r\n            >\r\n              {loading ? \"Cargando...\" : \"Iniciar Sesión\"}{\" \"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n\r\n// Los valores que deberá tener la propiedad “data-testid” en los elementos HTML son:\r\n\r\n// h1 de título  data-testid=\"login__title\"\r\n// Input de email  data-testid=“login__email”\r\n// Input de contraseña  data-testid=“login__password”\r\n// Botón para ingresar data-testid=“login__btn-login”\r\n// Span que alerta con notificaciones  data-testid==“alert__text”\r\n","\r\nimport { useTable } from \"react-table\";\r\nimport \"../src/css/Table.css\"\r\nexport default function TableComponent({columns, data}: any) \r\n{\r\n \r\n    const initialState = {  };\r\n    const {\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n      } = useTable({ columns, data, initialState });\r\n\r\n    return (\r\n        <div>\r\n              <table  {...getTableBodyProps()} data-testid=\"users__table\">\r\n                <thead>\r\n                    {\r\n                        headerGroups.map(headerGroup => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map(column => (\r\n                                    <th {...column.getHeaderProps()} style={{ textAlign: \"center\" }} className=\"\">\r\n                                    {\r\n                                        column.render('Header')\r\n                                    }\r\n                                    </th>\r\n                                ))\r\n                            }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map(row => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map(cell => {\r\n                                    if(cell.column.id == 'avatar') \r\n                                    {\r\n                                        return(\r\n                                            <td {...cell.getCellProps()} style={{ textAlign: \"center\" }}>\r\n                                                <img src={cell.value} alt=\"Avatar\" width=\"120\" data-testid={\"user__img-\" + cell.row.values.id}/>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                        {\r\n                                            cell.render('Cell')\r\n                                        }\r\n                                        </td>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import {useState, useEffect, useMemo} from \"react\";\r\nimport Table from \"../Table\";\r\nimport {ActionCerrarSesion, ActionLoading, actionUsuarios} from \"../redux/Actions\";\r\nimport {useSelector, useDispatch, RootStateOrAny} from \"react-redux\";\r\nimport {get} from \"../rutas/token\";\r\nimport {Navigate} from \"react-router\";\r\n\r\n// Los valores que deberá tener la propiedad “data-testid” en los elementos HTML son:\r\n\r\n// h1 de título  data-testid=\"users__title\"\r\n// table con el contenido de la lista de usuarios   data-testid=\"users__table\"\r\n// Etiquetas de imagen con el avatar de cada usuario  data-testid=“user__img-\" concatenado con el id de cada usuario.\r\n// botón que redirecciona a la vista de crear nuevo usuario  data-testid=\"users__btn-create\"\r\n// un botón por cada página con el número de la página como texto data-testid=\"users__btn-page-\" concatenado con el número de la página\r\n\r\nexport default function UsersView(props : any) {\r\n\r\n\r\n    const token = get();\r\n    // const [load, setLoading] = useState(false);\r\n    const load = useSelector((state : RootStateOrAny) => state.todos.loading);\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const [Redirect, setRedirect] = useState(get());\r\n    const cerraSesion=  useSelector((state : RootStateOrAny) => state.todos.sesion);\r\n    const DATA = useSelector((state : RootStateOrAny) => state.todos.usuario);\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: \"Id\",\r\n            accessor: \"id\"\r\n        },\r\n        {\r\n            Header: \"Avatar\",\r\n            accessor: \"avatar\"\r\n        },\r\n        {\r\n            Header: \"Correo electrónico\",\r\n            accessor: \"email\"\r\n        },\r\n        {\r\n            Header: \"Nombre\",\r\n            accessor: \"first_name\"\r\n        }, {\r\n            Header: \"Apellido\",\r\n            accessor: \"last_name\"\r\n        },\r\n    ], []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     if (token == null) {\r\n    //        <Navigate to=\"/ingreso\"\r\n    //            replace={true}></Navigate>;\r\n    //     }\r\n    // }, []);\r\n    useEffect(() => {\r\n        dispatch(ActionLoading(true));\r\n        dispatch(actionUsuarios(page));\r\n        // dispatch(ActionCerrarSesion(true));\r\n\r\n        if (DATA !== undefined) {\r\n            setUsers(DATA.data);\r\n            setTotalPages(DATA.total_pages);\r\n\r\n        }\r\n\r\n\r\n        // useEffect(() => {\r\n        //     let token = get();\r\n        //     if (token == null) {\r\n        //         <Navigate to=\"/ingreso\"\r\n        //             replace={true}></Navigate>;\r\n        //     }\r\n        // }, []);\r\n\r\n\r\n        if (!load) \r\n            dispatch(actionUsuarios(page));\r\n        \r\n\r\n\r\n    }, [page]);\r\n\r\n    const handleCreate = (event : any) : void => {\r\n        event.preventDefault(); <Navigate to=\"/crear\"\r\n            replace={true}></Navigate>\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 data-testid=\"users__title\">/usuarios/</h1>\r\n            <br/>\r\n            <button type=\"button\" className=\"button-4\"\r\n                style={\r\n                    {\r\n                        float: \"right\",\r\n                        margin: 10\r\n                    }\r\n                }\r\n                onClick={handleCreate}\r\n                data-testid=\"users__btn-create\">\r\n                Crear usuario\r\n            </button>\r\n            <br></br>\r\n            {\r\n            users != undefined ? <Table columns={columns}\r\n                data={users}\r\n                className=\"table\"/> : \";\"\r\n        }\r\n         {\r\n            cerraSesion === false ? <Navigate to=\"/ingreso\"\r\n            replace={true}></Navigate> : \";\"\r\n        }\r\n\r\n            <div>\r\n                <nav aria-label=\"Page navigation example\"\r\n                    style={\r\n                        {float: \"right\"}\r\n                }>\r\n                    <ul className=\"pagination\">\r\n                        {\r\n                        page > 1 ? (\r\n                            <li className=\"item\">\r\n                                <button className=\"button-4\"\r\n                                    onClick={\r\n                                        () => setPage(page - 1 > 0 ? page - 1 : 1)\r\n                                }>\r\n                                    Anterior\r\n                                </button>\r\n                            </li>\r\n\r\n                        ) : (\"\")\r\n                    }\r\n                        <li className=\"item\">\r\n                            <button className=\"button-4\"\r\n                                onClick={\r\n                                    () => setPage(1)\r\n                                }\r\n                                data-testid={\r\n                                    \"users__btn-page-\" + page\r\n                            }>\r\n                                {page} </button>\r\n                        </li>\r\n                        {\r\n                        totalPages > page ? (\r\n                            <li className=\"item\">\r\n                                <button className=\"button-4\"\r\n                                    onClick={\r\n                                        () => setPage(page + 1)\r\n                                }>\r\n                                    Siguiente\r\n                                </button>\r\n                            </li>\r\n                        ) : (\"\")\r\n                    } </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { get } from './token.ts'\n\nexport default function PrivateRoute({ children }) {\n  const  currentUser  = get()\n\n  if (!currentUser) {\n    return <Navigate to='/ingreso' />\n  }\n\n  return children;\n}\n\n","//Los valores que deberá tener la propiedad “data-testid” en los elementos HTML son:\r\n//h1 de título=\"error404__title\"\r\nexport default function Error404View(props: any) {\r\n  return (\r\n    <div ><h1 data-testid=\"error404__title\" >/no encontramos esta página./</h1></div>\r\n  )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport CreateUserView from \"./views/CreateUserView\";\r\nimport Error from \"./views/Error404View\";\r\nimport Login from \"./views/LoginView\";\r\nimport Home from \"./views/HomeView\";\r\nimport Users from \"./views/UsersView\";\r\nimport \"../src/css/Global.css\";\r\n\r\nimport {Routes, Navigate, Route} from \"react-router-dom\";\r\nimport PrivateRoute from \"./rutas/Private\";\r\nimport PublicRoute from \"./rutas/Public\";\r\nimport {get} from \"./rutas/token\";\r\nimport Error404View from \"./views/Error404View\";\r\n\r\nfunction App() {\r\n    const token = get();\r\n  \r\n\r\n    return (\r\n        <div className=\"main\">\r\n          \r\n            <div className=\"main\">\r\n              \r\n                <div className=\"container-fluid\">\r\n                    <Routes>\r\n                        <Route path=\"/usuarios\"\r\n                            element={\r\n                                <PrivateRoute><Users/></PrivateRoute>\r\n                            }\r\n                            \r\n                            \r\n                            />\r\n\r\n                        <Route path=\"/crear\"\r\n                            element={\r\n                                <PrivateRoute><CreateUserView/></PrivateRoute>\r\n                            }/>\r\n                        <Route path=\"/\"\r\n                            element={\r\n                                <Navigate\r\n                            replace\r\n                            to=\"/ingreso\"/>\r\n                            }/>\r\n\r\n                        <Route path=\"/ingreso\"\r\n                            element={\r\n                                get() !== null ? (\r\n                                    <Navigate to=\"/usuarios\"\r\n                                        replace={true}/>\r\n                                ) : (\r\n                                    <Login/>)\r\n                            }/>\r\n                        <Route path=\"*\"\r\n                            element={<Error404View/>}/>\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {MODAL, USUARIO, ERROR, LOADING , SESION} from \"./Types\";\r\nconst initialState = {\r\n    usuario: [],\r\n    modal: [],\r\n    error: \"\",\r\n    loading: false,\r\n    sesion: false,\r\n\r\n\r\n};\r\n\r\n\r\nexport default function rooReducer(state = initialState, action : any) {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case USUARIO:\r\n            return {\r\n                ... state,\r\n                usuario: action.payload\r\n\r\n\r\n            };\r\n\r\n            case SESION:\r\n                return {\r\n                    ... state,\r\n                    sesion: action.payload\r\n    \r\n    \r\n                };\r\n        case LOADING:\r\n            return {\r\n                ... state,\r\n\r\n                loading: action.payload\r\n\r\n            };\r\n\r\n        case ERROR:\r\n            return {\r\n                ... state,\r\n\r\n                error: action.payload\r\n\r\n            };\r\n\r\n\r\n        case MODAL:\r\n            return {\r\n                ... state,\r\n\r\n                modal: action.payload\r\n\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistReducer } from 'redux-persist'\r\nimport todos from \"./Reducer\";\r\n\r\nconst rootReducer = combineReducers({ todos });\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\n\r\n\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.5ae34a69.png\";","import { NavLink, Navigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {actionDestroySesion} from \"../src/redux/Actions\";\r\n\r\nimport \"../src/css/Header.css\";\r\nimport Logo from \"./img/logo.png\";\r\nimport { get, remove } from \"../src/rutas/token\";\r\n\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport { ActionCerrarSesion } from './redux/Actions';\r\n\r\nconst Header = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const token = get();\r\n  const [RedirectText, setRedirect] = useState(\"Cerrar Sesión\");\r\n   const cerraSesion=  useSelector((state : RootStateOrAny) => state.todos.sesion);\r\n\r\n\r\nuseEffect(() => {\r\n  if (token) {\r\n    <Navigate to=\"/usuarios\" replace={true}></Navigate> \r\n}\r\n}, [])\r\n\r\n      \r\n\r\n  const handleDestroy = (event: any): void => {\r\n    event.preventDefault();\r\n    sessionStorage.removeItem(\"token\");\r\n    dispatch(ActionCerrarSesion(false));\r\n    setRedirect(\"Cerrando...\");\r\n    setTimeout(() => {\r\n    setRedirect(\"Cerrar Sesión\");\r\n      <Navigate to=\"/ingreso\"\r\n        replace={true}></Navigate>\r\n    }, 1200);\r\n\r\n  };\r\n\r\n\r\n\r\n \r\n  \r\n\r\n  const [clicked, setclicked] = useState(false);\r\n  const handleclicked = () => setclicked(!clicked);\r\n  const Close = () => setclicked(false);\r\n  const tokenn = sessionStorage.getItem(\"token\");\r\n\r\n\r\n  return (\r\n  <div>\r\n    \r\n       \r\n      <div\r\n        className={clicked ? \"main-container\" : \"\"}\r\n        onClick={() => Close()}\r\n      />\r\n      <nav className=\"navbar\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"nav-container\">\r\n          <img src={Logo} alt=\"logo\" className=\"logo\" />\r\n          <i className=\"fa fa-code\"></i>\r\n\r\n          <ul className={clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n            {\" \"}\r\n          \r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-item\"\r\n                to=\"/usuarios\"\r\n                data-testid=\"header__link-users\"\r\n              >\r\n                usuarios\r\n              </NavLink>\r\n            </li>\r\n\r\n         \r\n\r\n              {cerraSesion === false ?\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-item\"\r\n                  to=\"/ingreso\"\r\n                  data-testid=\"header__link-login\"\r\n                >\r\n                  ingreso\r\n                </NavLink>\r\n              </li>\r\n              :\r\n              <li className=\"nav-item\">\r\n              <NavLink\r\n             className=\"nav-item\"\r\n             to=\"/ingreso\"\r\n             onClick={ handleDestroy}\r\n             data-testid=\"header__link-signout\"\r\n           >\r\n            {RedirectText} \r\n             </NavLink>\r\n         </li>\r\n            }\r\n           \r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-item\"\r\n                to=\"/crear/\"\r\n                data-testid=\"header__link-create\"\r\n              >\r\n                crear\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className=\"nav-icon\" onClick={handleclicked}>\r\n            {\" \"}\r\n            {clicked ? <FaTimes /> : <FaBars />}{\" \"}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n// Los valores que deberá tener la propiedad “data-testid” en los elementos HTML son:\r\n\r\n// elemento de redirección a ingreso data-testid=\"header__link-login\"\r\n// elemento de redirección a usuarios data-testid=\"header__link-users\"\r\n// elemento de redirección a Crear data-testid=\"header__link-create\"\r\n// elemento para cerrar sesión data-testid=\"header__link-signout\"\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider, useSelector , useDispatch } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\n\r\nimport store from \"../src/redux/Store\";\r\nimport Header from \"./Header\";\r\n\r\nlet persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n        <Header/>\r\n          <App />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\nfunction selectA(selectA: any) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n"],"sourceRoot":""}